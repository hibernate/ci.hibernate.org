---

- name: Deploy all RSA keys generated on the slaves so they can connect to the master
  authorized_key: user=jenkins key="{{ lookup('file', item) }}"
  with_fileglob: /tmp/publicdeployedkeys/*

- name: Ensure Jenkins repo is installed.
  get_url:
    url: "http://pkg.jenkins-ci.org/redhat/jenkins.repo"
    dest: /etc/yum.repos.d/jenkins.repo

- name: Add Jenkins repo GPG key.
  rpm_key:
    state: present
    key: "http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key"

- name: Ensure Jenkins is installed
  yum: name=jenkins state=present

- name: Ensure Jenkins is started now, and again on startup
  service: name=jenkins enabled=yes state=started

# Get a fresh copy of the Jenkins CLI jar
- name: Wait for Jenkins to be started
  wait_for: host=localhost port=8080 delay=10

- name: Get Jenkins CLI
  get_url: url=http://localhost:8080/jnlpJars/jenkins-cli.jar dest=/home/jenkins/jenkins-cli.jar mode=0440

# Install and Update all the plugins we need (listing dependencies too)
- name: Update Jenkins Plugins
  with_items:
    - name: analysis-collector
    - name: analysis-core
    - name: ant
    - name: antisamy-markup-formatter
    - name: audit-trail
    - name: build-timeout
    - name: checkstyle
    - name: credentials
    - name: cvs
    - name: docker-build-step
    - name: embeddable-build-status
    - name: envinject
    - name: external-monitor-job
    - name: findbugs
    - name: ghprb
    - name: git
    - name: git-client
    - name: github
    - name: github-api
    - name: github-oauth
    - name: gradle
    - name: greenballs
    - name: hipchat
    - name: htmlpublisher
    - name: instant-messaging
    - name: ircbot
    - name: ldap
    - name: jacoco
    - name: javadoc
    - name: jira
    - name: jobConfigHistory
    - name: junit
    - name: mailer
    - name: mapdb-api
    - name: matrix-auth
    - name: matrix-project
    - name: maven-plugin
    - name: notification
    - name: pam-auth
    - name: pmd
    - name: scm-api
    - name: script-security
    - name: simple-theme-plugin
    - name: ssh-agent
    - name: ssh-credentials
    - name: ssh-slaves
    - name: subversion
    - name: tasks
    - name: token-macro
    - name: translation
    - name: twitter
    - name: windows-slaves
  shell: java -jar /home/jenkins/jenkins-cli.jar -s http://localhost:8080 install-plugin {{ item.name }}
  notify: Restart Jenkins

# Now install Apache HTTPD
- name: install the latest version of Apache HTTPD
  yum: name=httpd state=latest

- name: Make sure the example welcome page from HTTPD is removed
  file: path=/etc/httpd/conf.d/{{ item }} state=absent
  with_items:
    - autoindex.conf
    - userdir.conf
    - welcome.conf

- name: Custom Jenkins configuration
  copy: src=jenkins-config dest=/etc/sysconfig/jenkins mode=0600 owner=root

- name: Add custom HTTPD configuration (common)
  copy: src=httpd-common-config dest=/etc/httpd/conf.d/common.conf mode=0600 owner=root

- name: Add custom HTTPD configuration (ci.hibernate.org)
  copy: src=httpd-ci-hibernate-org-config dest=/etc/httpd/conf.d/ci-hibernate-org.conf mode=0600 owner=root

- name: Add custom HTTPD configuration (staging.hibernate.org)
  copy: src=httpd-staging-hibernate-org-config dest=/etc/httpd/conf.d/staging-hibernate-org.conf mode=0600 owner=root

- name: Reconfigure SELinux to allow HTTPD to forward requests to Jenkins
  command: setsebool -P httpd_can_network_connect 1

- name: Ensure Apache HTTPD is started now, and again on startup
  service: name=httpd enabled=yes state=restarted

- name: Generate the script to synchronize tools on slaves
  template: src=transfer-to-slaves-script dest=/home/jenkins/transfer-to-slaves.sh owner=jenkins mode=0744
