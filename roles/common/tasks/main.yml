---
# Configure journald
- name: Apply journald configuration for minumum overhead and storage costs
  copy: src=journald.conf dest=/etc/systemd/journald.conf owner=root group=root mode=0644
  notify: Restart journald
  tags:
    - journald

- name: Remove old journald stored logs from disk
  file: path=/var/log/journal state=absent
  tags:
    - journald

# Update and install packages, using yum
- name: Install all package upgrades using yum
  yum: name=* state=latest
  notify:
     - Restart server
     - Wait for server to restart
  when: ansible_pkg_mgr == 'yum'

# Update and install packages, using dnf
- name: Install all package upgrades using dnf
  dnf: name=* state=latest
  notify:
     - Restart server
     - Wait for server to restart
  when: ansible_pkg_mgr == 'dnf'

# Hostname and hosts file
- name: Set the hostname
  hostname: name={{ hostname }}
  tags:
    - hostname

- name: Setup the hosts file to workaround Java RMI limitations
  template: src=hosts dest=/etc/hosts
  tags:
    - hostname

# Create the jenkins user and explicitly set gid and uid
- group: name=jenkins state=present gid=1001
- user: name=jenkins comment="Jenkins user" shell=/bin/bash state=present generate_ssh_key=yes uid=1001
  tags:
    - crosskeyauthentication

# Fetch the public key of this node
- fetch: src=/home/jenkins/.ssh/id_rsa.pub dest=/tmp/publicdeployedkeys/pubkey-{{ ansible_hostname }} flat=yes fail_on_missing=yes
  tags:
    - crosskeyauthentication
    - fetch-keys

- name: Setup SSH config
  copy: src=sshconfig dest=/home/jenkins/.ssh/config mode=0600 owner=jenkins group=jenkins

- name: Setup Github as a known host
  copy: src=github-knownhosts dest=/home/jenkins/.ssh/github-knownhosts mode=0600 owner=jenkins group=jenkins

- name: Setup SourceForge as a known host
  copy: src=sourceforge-knownhosts dest=/home/jenkins/.ssh/sourceforge-knownhosts mode=0600 owner=jenkins group=jenkins

- name: Setup filemgmt.boss.org as a known host
  copy: src=filemgmt-knownhosts dest=/home/jenkins/.ssh/filemgmt-knownhosts mode=0600 owner=jenkins group=jenkins

# Install Maven 3.2.5

- name: Download Maven
  get_url:
    url=http://www.mirrorservice.org/sites/ftp.apache.org/maven/maven-3/3.2.5/binaries/apache-maven-3.2.5-bin.tar.gz
    dest=/home/jenkins/apache-maven-3.2.5-bin.tar.gz

- file: path=/home/jenkins/apache-maven-3.2.5-bin.tar.gz owner=jenkins group=jenkins mode=0644

- name: Install Maven
  unarchive:
    src=/home/jenkins/apache-maven-3.2.5-bin.tar.gz
    dest=/home/jenkins/
    copy=no
    creates=/home/jenkins/apache-maven-3.2.5
    group=jenkins
    owner=jenkins

- name: Add .bashrc for jenkins
  copy: src=.bashrc dest=/home/jenkins/.bashrc mode=0600 owner=jenkins group=jenkins

# Install packages required for web site build / Ruby environment
- name: Web site build tool chain (GCC, headers etc.)
  dnf: name={{item}} state=present
  with_items:
   - gcc
   - make
   - ruby-devel
   - gcc-c++
   - libxml2
   - libxml2-devel
   - libxslt
   - libxslt-devel
   - rubygem-nokogiri
   - findutils
   - git
   - ruby
   - rpm-build
   - tuned
  when: ansible_pkg_mgr == 'dnf'
  tags:
    - websitegems

- name: Web site build tool chain (GCC, headers etc.)
  yum: name={{item}} enablerepo=rhui-REGION-rhel-server-optional state=present
  with_items:
   - gcc
   - make
   - ruby-devel
   - gcc-c++
   - libxml2
   - libxml2-devel
   - libxslt
   - libxslt-devel
   - findutils
   - git
   - ruby
   - rpm-build
   - tuned
  when: ansible_pkg_mgr == 'yum'
  tags:
    - websitegems

# Gems required for web-site build
- name: Install Rake
  gem: name=rake state=latest user_install=yes
  become_user: jenkins
  tags:
    - websitegems

- name: Install Bundler
  gem: name=bundler state=latest user_install=yes
  become_user: jenkins
  tags:
    - websitegems
