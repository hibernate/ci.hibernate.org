---

# Use the extra space on /mnt

- name: Create /mnt/.m2
  file: path=/mnt/.m2 owner=jenkins group=jenkins mode=0755 state=directory
  tags:
    - jenkins

- name: Create link /home/jenkins/.m2 to /mnt/.m2
  file: path=/home/jenkins/.m2 src=/mnt/.m2 owner=jenkins group=jenkins mode=0755 state=link force=yes
  tags:
    - jenkins

- name: Create /mnt/.gradle
  file: path=/mnt/.gradle owner=jenkins group=jenkins mode=0755 state=directory
  tags:
    - jenkins

- name: Create link /home/jenkins/.gradle to /mnt/.gradle
  file: path=/home/jenkins/.gradle src=/mnt/.gradle owner=jenkins group=jenkins mode=0755 state=link force=yes
  tags:
    - jenkins

- name: Create /mnt/jenkins-workdir
  file: path=/mnt/jenkins-workdir owner=jenkins group=jenkins mode=0755 state=directory
  tags:
    - jenkins

- name: Create link /var/lib/jenkins to /mnt/jenkins-workdir
  file: path=/var/lib/jenkins src=/mnt/jenkins-workdir owner=jenkins group=jenkins mode=0755 state=link force=yes
  tags:
    - jenkins

- name: Add passwordless connection for jenkins
  copy: src=authorized_keys dest=/home/jenkins/.ssh/authorized_keys mode=0600 owner=jenkins group=jenkins
  tags:
    - jenkins

# Configure journald
- name: Apply journald configuration
  copy: src=journald.conf dest=/etc/systemd/journald.conf owner=root group=root mode=0644
  notify: Restart journald
  tags:
    - journald

# Install CouchDB
- name: Get the the latest version of CouchDB
  dnf: name=couchdb state=latest
  tags:
    - couchdb

- name: Apply CouchDB tuning suited for unit tests
  copy: src=couchdb/default.ini dest=/etc/couchdb/default.ini owner=root group=root mode=0644
  tags:
    - couchdb

# If the hostname is too long, CouchDB might not work
- name: Set the hostname
  hostname: name={{ hostname }}
  tags:
    - couchdb

- name: Start CouchDB
  service: name=couchdb enabled=yes state=started
  become: yes
  tags:
    - couchdb

# Install Cassandra
- name: Configure Datastax repo
  copy: src=datastax.repo dest=/etc/yum.repos.d/ owner=root group=root mode=0644
  tags:
    - cassandra

- name: Install Cassandra
  dnf: name=dsc30 enablerepo=datastax state=latest
  with_items:
    - dsc30
  tags:
    - cassandra

- name: Start Cassandra
  service: name=cassandra enabled=yes state=started
  tags:
    - cassandra

# Install packages required for web site build / Ruby environment
- name: Web site build tool chain (GCC, headers etc.)
  dnf: name={{item}} state=present
  with_items:
   - gcc
   - make
   - ruby-devel
   - gcc-c++
   - libxml2
   - libxml2-devel
   - libxslt
   - libxslt-devel
   - rubygem-nokogiri
   - findutils
   - git
   - ruby
   - rpm-build
  tags:
    - websitegems

# Additional packages required for some build
- name: Extra packages required on slaves
  dnf: name={{item}} state=present
  with_items:
   - wget
   - jq
   - sed
   - ant
  tags:
    - extra-packages


# Gems required for web-site build
- name: Install Rake
  gem: name=rake state=latest user_install=yes
  become_user: jenkins
  tags:
    - websitegems

- name: Install Bundler
  gem: name=bundler state=latest user_install=yes
  become_user: jenkins
  tags:
    - websitegems

# Some slaves need to run rsync on the master,
# this will ensure master is added to the known_host
# The ssh-keyscan approach (controversial!) is inspired from: http://hakunin.com/six-ansible-practices
- name: Ensure cimaster is a known host
  lineinfile:
    dest: /home/jenkins/.ssh/known_hosts
    create: yes
    state: present
    owner: jenkins
    group: jenkins
    mode: 0600
    line: "{{ lookup('pipe', 'ssh-keyscan -t ecdsa ' + groups['cimaster'][0]) }}"
    regexp: "^{{groups['cimaster'][0]}}"
  tags:
    - crosskeyauthentication

- name: Ensure ci.hibernate.org is a known host
  lineinfile:
    dest: /home/jenkins/.ssh/cihibernate-knownhosts
    create: yes
    state: present
    owner: jenkins
    group: jenkins
    mode: 0600
    line: "{{ lookup('pipe', 'ssh-keyscan -t ecdsa ci.hibernate.org') }}"
    regexp: "^ci.hibernate.org"
  tags:
    - crosskeyauthentication

- name: Ensure in.relation.to is a known host
  lineinfile:
    dest: /home/jenkins/.ssh/inrelationto-knownhosts
    create: yes
    state: present
    owner: jenkins
    group: jenkins
    mode: 0600
    line: "{{ lookup('pipe', 'ssh-keyscan -t ecdsa in.relation.to') }}"
    regexp: "^in.relation.to"
  tags:
    - crosskeyauthentication

